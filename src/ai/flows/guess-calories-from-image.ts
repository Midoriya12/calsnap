// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview This flow estimates the calorie count of a meal from an image.
 *
 * - guessCaloriesFromImage - Estimates the calorie count of a meal from an image.
 * - GuessCaloriesFromImageInput - The input type for the guessCaloriesFromImage function.
 * - GuessCaloriesFromImageOutput - The return type for the guessCaloriesFromImage function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GuessCaloriesFromImageInputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      "A photo of a meal, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type GuessCaloriesFromImageInput = z.infer<
  typeof GuessCaloriesFromImageInputSchema
>;

const GuessCaloriesFromImageOutputSchema = z.object({
  estimatedCalories: z
    .number()
    .describe('The estimated calorie count of the meal.'),
  ingredients: z.array(z.string()).describe('List of ingredients identified in the meal')
});
export type GuessCaloriesFromImageOutput = z.infer<
  typeof GuessCaloriesFromImageOutputSchema
>;

export async function guessCaloriesFromImage(
  input: GuessCaloriesFromImageInput
): Promise<GuessCaloriesFromImageOutput> {
  return guessCaloriesFromImageFlow(input);
}

const guessCaloriesFromImagePrompt = ai.definePrompt({
  name: 'guessCaloriesFromImagePrompt',
  input: {schema: GuessCaloriesFromImageInputSchema},
  output: {schema: GuessCaloriesFromImageOutputSchema},
  prompt: `You are an expert nutritionist. You will be provided with a photo of a meal, and a list of the ingredients in the meal.

  You will estimate the number of calories in the meal based on the photo and ingredient list.
  You will output a JSON object with the estimated calorie count of the meal, and a list of the ingredients in the meal.
  Photo: {{media url=photoDataUri}}`,
});

const guessCaloriesFromImageFlow = ai.defineFlow(
  {
    name: 'guessCaloriesFromImageFlow',
    inputSchema: GuessCaloriesFromImageInputSchema,
    outputSchema: GuessCaloriesFromImageOutputSchema,
  },
  async input => {
    const {output} = await guessCaloriesFromImagePrompt(input);
    return output!;
  }
);
